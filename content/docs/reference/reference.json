{
  "address": {
    "title": "Address",
    "id": "address",
    "filename": "address.md",
    "description": "Address specifies the host and port to serve HTTP requests from.",
    "keywords": [
      "reference",
      "Address"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "ADDRESS",
      "Config File Key": "address",
      "Type": "string"
    }
  },
  "authenticate-service-url": {
    "title": "Authenticate Service URL",
    "id": "authenticate-service-url",
    "filename": "authenticate-service-url.md",
    "description": "Authenticate Service URL is the externally accessible URL for the authenticate service.",
    "keywords": [
      "reference",
      "Authenticate Service URL"
    ],
    "services": [
      "proxy",
      "authenticate",
      "authorize"
    ],
    "attributes": {
      "Environmental Variable": "AUTHENTICATE_SERVICE_URL",
      "Config File Key": "authenticate_service_url",
      "Type": "URL"
    }
  },
  "autocert": {
    "title": "Autocert",
    "id": "autocert/autocert",
    "filename": "autocert.md",
    "description": "Turning on autocert allows Pomerium to automatically retrieve, manage, and renew public facing TLS certificates from Lets Encrypt.",
    "keywords": [
      "reference",
      "Autocert"
    ],
    "services": [
      "authenticate",
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "AUTOCERT",
      "Config File Key": "autocert",
      "Type": "bool"
    }
  },
  "autocert-ca": {
    "title": "Autocert CA",
    "id": "autocert/autocert-ca",
    "filename": "autocert-ca.md",
    "description": "Autocert CA is the directory URL of the ACME CA to use when requesting certificates.",
    "keywords": [
      "reference",
      "Autocert CA"
    ],
    "services": [
      "authenticate",
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "AUTOCERT_CA",
      "Config File Key": "autocert_ca"
    }
  },
  "autocert-email": {
    "title": "Autocert Email",
    "id": "autocert/autocert-email",
    "filename": "autocert-email.md",
    "description": "Autocert Email is the email address to use when requesting certificates from an ACME CA.",
    "keywords": [
      "reference",
      "Autocert Email"
    ],
    "services": [
      "authenticate",
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "AUTOCERT_EMAIL",
      "Config File Key": "autocert_email",
      "Type": "string containing the email address to use when registering an account"
    }
  },
  "autocert-must-staple": {
    "title": "Autocert Must-Staple",
    "id": "autocert/autocert-must-staple",
    "filename": "autocert-must-staple.md",
    "keywords": [
      "reference",
      "Autocert Must-Staple"
    ],
    "services": [
      "authenticate",
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "AUTOCERT_MUST_STAPLE",
      "Config File Key": "autocert_must_staple",
      "Type": "bool"
    }
  },
  "autocert-directory": {
    "title": "Autocert Directory",
    "id": "autocert/autocert-directory",
    "filename": "autocert-directory.md",
    "description": "Autocert directory is the path which autocert will store x509 certificate data.",
    "keywords": [
      "reference",
      "Autocert Directory"
    ],
    "services": [
      "authenticate",
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "either AUTOCERT_DIR",
      "Config File Key": "autocert_dir",
      "Type": "string pointing to the path of the directory",
      "Default": "",
      "  [$XDG_DATA_HOME](https": "//specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html)"
    }
  },
  "autocert-use-staging": {
    "title": "Autocert Use Staging",
    "id": "autocert/autocert-use-staging",
    "filename": "autocert-use-staging.md",
    "description": "Let's Encrypt has strict usage limits. Enabling this setting allows you to use Let's Encrypt's staging environment which has much more lax usage limits.",
    "keywords": [
      "reference",
      "Autocert Use Staging"
    ],
    "services": [
      "authenticate",
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "AUTOCERT_USE_STAGING",
      "Config File Key": "autocert_use_staging",
      "Type": "bool"
    }
  },
  "autocert-eab-key-id": {
    "title": "Autocert EAB Key ID",
    "id": "autocert/autocert-eab-key-id",
    "filename": "autocert-eab-key-id.md",
    "description": "Autocert EAB Key ID is the key identifier when requesting a certificate from a CA with External Account Binding enabled.",
    "keywords": [
      "reference",
      "Autocert EAB Key ID"
    ],
    "services": [
      "authenticate",
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "AUTOCERT_EAB_KEY_ID",
      "Config File Key": "autocert_eab_key_id",
      "Type": "string containing the identifier for an ACME EAB key to use"
    }
  },
  "autocert-eab-mac-key": {
    "title": "Autocert EAB MAC Key",
    "id": "autocert/autocert-eab-mac-key",
    "filename": "autocert-eab-mac-key.md",
    "description": "Autocert EAB MAC Key is the base64url-encoded secret key corresponding to the Autocert EAB Key ID.",
    "keywords": [
      "reference",
      "Autocert EAB MAC Key"
    ],
    "services": [
      "authenticate",
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "AUTOCERT_EAB_MAC_KEY",
      "Config File Key": "autocert_eab_mac_key",
      "Type": "string containing a base64url-encoded secret key"
    }
  },
  "autocert-trusted-certificate-authority": {
    "title": "Autocert Trusted Certificate Authority",
    "id": "autocert/autocert-trusted-certificate-authority",
    "filename": "autocert-trusted-certificate-authority.md",
    "keywords": [
      "reference",
      "Autocert Trusted Certificate Authority"
    ],
    "services": [
      "authenticate",
      "proxy"
    ],
    "attributes": {
      "Environment Variable": "AUTOCERT_TRUSTED_CA / AUTOCERT_TRUSTED_CA_FILE",
      "Config File Key": "autocert_trusted_ca / autocert_trusted_ca_file",
      "Type": "[base64 encoded] string or relative file location"
    }
  },
  "certificates": {
    "title": "Certificates",
    "id": "certificates",
    "filename": "certificates.md",
    "keywords": [
      "reference",
      "Certificates"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Config File Key": "certificate_file / certificate_key_file",
      "Environmental Variable": "CERTIFICATE_FILE / CERTIFICATE_KEY_FILE",
      "Type": "certificate relative file location string"
    }
  },
  "client-certificate-authority": {
    "title": "Client Certificate Authority",
    "id": "client-certificate-authority",
    "filename": "client-certificate-authority.md",
    "keywords": [
      "reference",
      "Client Certificate Authority"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environment Variable": "CLIENT_CA / CLIENT_CA_FILE",
      "Config File Key": "client_ca / client_ca_file",
      "Type": "[base64 encoded] string or relative file location"
    }
  },
  "client-crl": {
    "title": "Client CRL",
    "id": "client-crl",
    "filename": "client-crl.md",
    "keywords": [
      "reference",
      "Client CRL"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environment Variable": "CLIENT_CRL / CLIENT_CRL_FILE",
      "Config File Key": "client_crl / client_crl_file",
      "Type": "[base64 encoded] string or relative file location"
    }
  },
  "cookie-name": {
    "title": "Cookie Name",
    "id": "cookie-name",
    "filename": "cookie-name.md",
    "description": "The name of the session cookie sent to clients.",
    "keywords": [
      "reference",
      "Cookie Name"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "COOKIE_NAME",
      "Config File Key": "cookie_name",
      "Type": "string",
      "Default": "_pomerium"
    }
  },
  "cookie-secret": {
    "title": "Cookie Secret",
    "id": "cookie-secret",
    "filename": "cookie-secret.md",
    "description": "Secret used to encrypt and sign session cookies.",
    "keywords": [
      "reference",
      "Cookie Secret"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "COOKIE_SECRET",
      "Config File Key": "cookie_secret",
      "Type": "[base64 encoded] string"
    }
  },
  "cookie-domain": {
    "title": "Cookie Domain",
    "id": "cookie-domain",
    "filename": "cookie-domain.md",
    "description": "The scope of session cookies issued by Pomerium.",
    "keywords": [
      "reference",
      "Cookie Domain"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "COOKIE_DOMAIN",
      "Config File Key": "cookie_domain",
      "Type": "string",
      "Example": "localhost.pomerium.io"
    }
  },
  "https-only": {
    "title": "HTTPS only",
    "id": "https-only",
    "filename": "https-only.md",
    "description": "If true, instructs browsers to only send user session cookies over HTTPS.",
    "keywords": [
      "reference",
      "HTTPS only"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "COOKIE_SECURE",
      "Config File Key": "cookie_secure",
      "Type": "bool",
      "Default": "true"
    }
  },
  "javascript-security": {
    "title": "Javascript Security",
    "id": "javascript-security",
    "filename": "javascript-security.md",
    "description": "If true, prevents javascript in browsers from reading user session cookies.",
    "keywords": [
      "reference",
      "Javascript Security"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "COOKIE_HTTP_ONLY",
      "Config File Key": "cookie_http_only",
      "Type": "bool",
      "Default": "true"
    }
  },
  "expiration": {
    "title": "Expiration",
    "id": "expiration",
    "filename": "expiration.md",
    "description": "Sets the lifetime of session cookies. After this interval, users must reauthenticate.",
    "keywords": [
      "reference",
      "Expiration"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "COOKIE_EXPIRE",
      "Config File Key": "cookie_expire",
      "Default": "14h"
    }
  },
  "data-broker-service": {
    "title": "Data Broker Service",
    "id": "data-broker-service",
    "filename": "data-broker-service.md",
    "keywords": [
      "reference",
      "data broker service"
    ],
    "services": [
      "databroker"
    ]
  },
  "data-broker-service-url": {
    "title": "Data Broker Service URL",
    "id": "data-broker-service-url",
    "filename": "data-broker-service-url.md",
    "keywords": [
      "reference",
      "Data Broker Service URL"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "DATABROKER_SERVICE_URL or DATABROKER_SERVICE_URLS",
      "Config File Key": "databroker_service_url or databroker_service_urls",
      "Type": "URL"
    }
  },
  "debug": {
    "title": "Debug",
    "id": "debug",
    "filename": "debug.md",
    "description": "Debug enables colored, human-readable logs to be streamed to standard out.",
    "keywords": [
      "reference",
      "Debug"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "POMERIUM_DEBUG",
      "Config File Key": "pomerium_debug",
      "Type": "bool",
      "Default": "false"
    }
  },
  "forward-auth": {
    "title": "Forward Auth",
    "id": "forward-auth",
    "filename": "forward-auth.md",
    "description": "Forward authentication creates an endpoint that can be used with third-party proxies.",
    "keywords": [
      "reference",
      "Forward Auth"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "FORWARD_AUTH_URL",
      "Config File Key": "forward_auth_url",
      "Type": "URL (must contain a scheme and hostname)"
    }
  },
  "global-timeouts": {
    "title": "Global Timeouts",
    "id": "global-timeouts",
    "filename": "global-timeouts.md",
    "description": "Timeouts set the global server timeouts. Timeouts can also be set for individual routes.",
    "keywords": [
      "reference",
      "Global Timeouts"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variables": "TIMEOUT_READ TIMEOUT_WRITE TIMEOUT_IDLE",
      "Config File Key": "timeout_read timeout_write timeout_idle",
      "Example": "TIMEOUT_READ=30s",
      "Defaults": "TIMEOUT_READ=30s TIMEOUT_WRITE=0 TIMEOUT_IDLE=5m"
    }
  },
  "grpc-address": {
    "title": "GRPC Address",
    "id": "grpc-address",
    "filename": "grpc-address.md",
    "description": "Address specifies the host and port to serve GRPC requests from.",
    "keywords": [
      "reference",
      "GRPC Address"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "GRPC_ADDRESS",
      "Config File Key": "grpc_address",
      "Type": "string"
    }
  },
  "grpc-insecure": {
    "title": "GRPC Insecure",
    "id": "grpc-insecure",
    "filename": "grpc-insecure.md",
    "description": "If set, GRPC Insecure disables transport security for communication between the proxy and authorize components.",
    "keywords": [
      "reference",
      "GRPC Insecure"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "GRPC_INSECURE",
      "Config File Key": "grpc_insecure",
      "Type": "bool"
    }
  },
  "grpc-client-timeout": {
    "title": "GRPC Client Timeout",
    "id": "grpc-client-timeout",
    "filename": "grpc-client-timeout.md",
    "keywords": [
      "reference",
      "GRPC Client Timeout"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "GRPC_CLIENT_TIMEOUT",
      "Config File Key": "grpc_client_timeout",
      "Default": "10s"
    }
  },
  "grpc-client-dns-roundrobin": {
    "title": "GRPC Client DNS RoundRobin",
    "id": "grpc-client-dns-roundrobin",
    "filename": "grpc-client-dns-roundrobin.md",
    "keywords": [
      "reference",
      "GRPC Client DNS RoundRobin"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "GRPC_CLIENT_DNS_ROUNDROBIN",
      "Config File Key": "grpc_client_dns_roundrobin",
      "Type": "bool",
      "Default": "true"
    }
  },
  "http-redirect-address": {
    "title": "HTTP Redirect Address",
    "id": "http-redirect-address",
    "filename": "http-redirect-address.md",
    "description": "If set, the HTTP Redirect Address specifies the host and port to redirect http to https traffic on.",
    "keywords": [
      "reference",
      "HTTP Redirect Address"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "HTTP_REDIRECT_ADDR",
      "Config File Key": "http_redirect_addr",
      "Type": "string"
    }
  },
  "insecure-server": {
    "title": "Insecure Server",
    "id": "insecure-server",
    "filename": "insecure-server.md",
    "description": "Turning on insecure server mode will result in pomerium starting, and operating without any protocol encryption in transit.",
    "keywords": [
      "reference",
      "Insecure Server"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "INSECURE_SERVER",
      "Config File Key": "insecure_server",
      "Type": "bool"
    }
  },
  "dns-lookup-family": {
    "title": "DNS Lookup Family",
    "id": "dns-lookup-family",
    "filename": "dns-lookup-family.md",
    "description": "The DNS IP address resolution policy.",
    "keywords": [
      "reference",
      "DNS Lookup Family"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "DNS_LOOKUP_FAMILY",
      "Config File Key": "dns_lookup_family",
      "Type": "string",
      "Options": "V4_ONLY V6_ONLY AUTO"
    }
  },
  "log-level": {
    "title": "Log Level",
    "id": "log-level",
    "filename": "log-level.md",
    "description": "Log level sets the global logging level for pomerium.",
    "keywords": [
      "reference",
      "Log Level"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "LOG_LEVEL",
      "Config File Key": "log_level",
      "Type": "string",
      "Options": "debug info warn error",
      "Default": "debug"
    }
  },
  "metrics-address": {
    "title": "Metrics Address",
    "id": "metrics-address",
    "filename": "metrics-address.md",
    "description": "Expose a prometheus format HTTP endpoint on the specified port.",
    "keywords": [
      "reference",
      "Metrics Address"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "METRICS_ADDRESS",
      "Config File Key": "metrics_address",
      "Type": "string",
      "Default": "disabled"
    }
  },
  "metrics-basic-authentication": {
    "title": "Metrics Basic Authentication",
    "id": "metrics-basic-authentication",
    "filename": "metrics-basic-authentication.md",
    "keywords": [
      "reference",
      "Metrics Basic Authentication"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "METRICS_BASIC_AUTH",
      "Config File Key": "metrics_basic_auth",
      "Default": ""
    }
  },
  "metrics-certificate": {
    "title": "Metrics Certificate",
    "id": "metrics-certificate",
    "filename": "metrics-certificate.md",
    "keywords": [
      "reference",
      "Metrics Certificate"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Config File Key": "metrics_certificate_file / metrics_certificate_key_file",
      "Environmental Variable": "METRICS_CERTIFICATE_FILE / METRICS_CERTIFICATE_KEY_FILE",
      "Type": "certificate relative file location string"
    }
  },
  "metrics-client-certificate-authority": {
    "title": "Metrics Client Certificate Authority",
    "id": "metrics-client-certificate-authority",
    "filename": "metrics-client-certificate-authority.md",
    "keywords": [
      "reference",
      "Metrics Client Certificate Authority"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environment Variable": "METRICS_CLIENT_CA / METRICS_CLIENT_CA_FILE",
      "Config File Key": "metrics_client_ca / metrics_client_ca_file",
      "Type": "[base64 encoded] string or relative file location"
    }
  },
  "proxy-log-level": {
    "title": "Proxy Log Level",
    "id": "proxy-log-level",
    "filename": "proxy-log-level.md",
    "description": "Log level sets the logging level for the Pomerium Proxy service.",
    "keywords": [
      "reference",
      "Proxy Log Level"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "PROXY_LOG_LEVEL",
      "Config File Key": "proxy_log_level",
      "Type": "string",
      "Options": "debug info warn error",
      "Default": "value of log_level or debug if both are unset"
    }
  },
  "service-mode": {
    "title": "Service Mode",
    "id": "service-mode",
    "filename": "service-mode.md",
    "description": "Service mode sets the pomerium service(s) to run.",
    "keywords": [
      "reference",
      "Service Mode"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "SERVICES",
      "Config File Key": "services",
      "Type": "string",
      "Default": "all",
      "Options": "all authenticate authorize databroker or proxy"
    }
  },
  "shared-secret": {
    "title": "Shared Secret",
    "id": "shared-secret",
    "filename": "shared-secret.md",
    "description": "Shared Secret is the base64 encoded 256-bit key used to mutually authenticate requests between services.",
    "keywords": [
      "reference",
      "Shared Secret"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "SHARED_SECRET",
      "Config File Key": "shared_secret",
      "Type": "[base64 encoded] string"
    }
  },
  "tracing": {
    "title": "Tracing",
    "id": "tracing",
    "filename": "tracing.md",
    "keywords": [
      "reference",
      "Tracing"
    ],
    "services": [
      "todo",
      "todo2"
    ]
  },
  "use-proxy-protocol": {
    "title": "Use Proxy Protocol",
    "id": "use-proxy-protocol",
    "filename": "use-proxy-protocol.md",
    "keywords": [
      "reference",
      "Use Proxy Protocol"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environment Variable": "USE_PROXY_PROTOCOL",
      "Config File Key": "use_proxy_protocol",
      "Type": "bool"
    }
  },
  "envoy-bootstrap-options": {
    "title": "Envoy Bootstrap Options",
    "id": "envoy-bootstrap-options",
    "filename": "envoy-bootstrap-options.md",
    "keywords": [
      "reference",
      "Envoy Bootstrap Options"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environment Variable": "ENVOY_ADMIN_ADDRESS, ENVOY_ADMIN_ACCESS_LOG_PATH, ENVOY_ADMIN_PROFILE_PATH, ENVOY_BIND_CONFIG_FREEBIND, ENVOY_BIND_CONFIG_SOURCE_ADDRESS",
      "Config File Keys": "envoy_admin_address, envoy_admin_access_log_path, envoy_admin_profile_path, envoy_bind_config_freebind, envoy_bind_config_source_address",
      "Type": "string"
    }
  },
  "authenticate-callback-path": {
    "title": "Authenticate Callback Path",
    "id": "authenticate-callback-path",
    "filename": "authenticate-callback-path.md",
    "description": "The authenticate callback path is the path/url from the authenticate service that will receive the response from your identity provider.",
    "keywords": [
      "reference",
      "Authenticate Callback Path"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "AUTHENTICATE_CALLBACK_PATH",
      "Config File Key": "authenticate_callback_path",
      "Type": "string",
      "Default": "/oauth2/callback"
    }
  },
  "authenticate-internal-service-url": {
    "title": "Authenticate Internal Service URL",
    "id": "authenticate-internal-service-url",
    "filename": "authenticate-internal-service-url.md",
    "keywords": [
      "reference",
      "Authenticate Internal Service URL"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "AUTHENTICATE_INTERNAL_SERVICE_URL",
      "Config File Key": "authenticate_internal_service_url",
      "Type": "URL"
    }
  },
  "identity-provider-client-id": {
    "title": "Identity Provider Client ID",
    "id": "identity-provider-client-id",
    "filename": "identity-provider-client-id.md",
    "description": "Client ID is the OAuth 2.0 Client Identifier retrieved from your identity provider.",
    "keywords": [
      "reference",
      "Identity Provider Client ID"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "IDP_CLIENT_ID",
      "Config File Key": "idp_client_id",
      "Type": "string"
    }
  },
  "identity-provider-client-secret": {
    "title": "Identity Provider Client Secret",
    "id": "identity-provider-client-secret",
    "filename": "identity-provider-client-secret.md",
    "description": "Client Secret is the OAuth 2.0 Secret Identifier retrieved from your identity provider.",
    "keywords": [
      "reference",
      "Identity Provider Client Secret"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "IDP_CLIENT_SECRET",
      "Config File Key": "idp_client_secret",
      "Type": "string"
    }
  },
  "identity-provider-name": {
    "title": "Identity Provider Name",
    "id": "identity-provider-name",
    "filename": "identity-provider-name.md",
    "description": "Provider is the short-hand name of a built-in OpenID Connect (oidc) identity provider to be used for authentication.",
    "keywords": [
      "reference",
      "Identity Provider Name"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "IDP_PROVIDER",
      "Config File Key": "idp_provider",
      "Type": "string",
      "Options": "auth0 azure google okta onelogin or oidc"
    }
  },
  "identity-provider-scopes": {
    "title": "Identity Provider Scopes",
    "id": "identity-provider-scopes",
    "filename": "identity-provider-scopes.md",
    "description": "Identity provider scopes correspond to access privilege scopes as defined in Section 33 of OAuth 20 RFC6749.",
    "keywords": [
      "reference",
      "Identity Provider Scopes"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "IDP_SCOPES",
      "Config File Key": "idp_scopes",
      "Type": "list of string",
      "Default": "oidc,profile, email, offline_access (typically)"
    }
  },
  "identity-provider-service-account": {
    "title": "Identity Provider Service Account",
    "id": "identity-provider-service-account",
    "filename": "identity-provider-service-account.md",
    "description": "Identity Provider Service Account is field used to configure any additional user account or access-token that may be required for querying additional user information during authentication.",
    "keywords": [
      "reference",
      "Identity Provider Service Account"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "IDP_SERVICE_ACCOUNT",
      "Config File Key": "idp_service_account",
      "Type": "string"
    }
  },
  "identity-provider-url": {
    "title": "Identity Provider URL",
    "id": "identity-provider-url",
    "filename": "identity-provider-url.md",
    "description": "Provider URL is the base path to an identity provider's OpenID connect discovery document.",
    "keywords": [
      "reference",
      "Identity Provider URL"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "IDP_PROVIDER_URL",
      "Config File Key": "idp_provider_url",
      "Type": "string"
    }
  },
  "identity-provider-request-params": {
    "title": "Identity Provider Request Params",
    "id": "identity-provider-request-params",
    "filename": "identity-provider-request-params.md",
    "description": "Headers specifies a mapping of HTTP Header to be added to proxied  requests. Nota bene Downstream application headers will be overwritten by Pomerium's headers on conflict.",
    "keywords": [
      "reference",
      "Identity Provider Request Params"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "IDP_REQUEST_PARAMS",
      "Config File Key": "idp_request_params",
      "Type": "map of strings key value pairs"
    }
  },
  "identity-provider-refresh-directory-settings": {
    "title": "Identity Provider Refresh Directory Settings",
    "id": "identity-provider-refresh-directory-settings",
    "filename": "identity-provider-refresh-directory-settings.md",
    "keywords": [
      "reference",
      "Identity Provider Refresh Directory Settings"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variables": "IDP_REFRESH_DIRECTORY_INTERVAL IDP_REFRESH_DIRECTORY_TIMEOUT",
      "Config File Key": "idp_refresh_directory_interval idp_refresh_directory_timeout",
      "Example": "IDP_REFRESH_DIRECTORY_INTERVAL=30m",
      "Defaults": "IDP_REFRESH_DIRECTORY_INTERVAL=10m IDP_REFRESH_DIRECTORY_TIMEOUT=1m"
    }
  },
  "authorize-service-url": {
    "title": "Authorize Service URL",
    "id": "authorize-service-url",
    "filename": "authorize-service-url.md",
    "description": "Authorize Service URL is the location of the internally accessible Authorize service.",
    "keywords": [
      "reference",
      "Authorize Service URL"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "AUTHORIZE_SERVICE_URL or AUTHORIZE_SERVICE_URLS",
      "Config File Key": "authorize_service_url or authorize_service_urls",
      "Type": "URL"
    }
  },
  "authorize-internal-service-url": {
    "title": "Authorize Internal Service URL",
    "id": "authorize-internal-service-url",
    "filename": "authorize-internal-service-url.md",
    "keywords": [
      "reference",
      "Authorize Internal Service URL"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "AUTHORIZE_INTERNAL_SERVICE_URL",
      "Config File Key": "authorize_internal_service_url",
      "Type": "URL"
    }
  },
  "certificate-authority": {
    "title": "Certificate Authority",
    "id": "certificate-authority",
    "filename": "certificate-authority.md",
    "description": "Certificate Authority is set when behind-the-ingress service communication uses self-signed certificates.",
    "keywords": [
      "reference",
      "Certificate Authority"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "CERTIFICATE_AUTHORITY or CERTIFICATE_AUTHORITY_FILE",
      "Config File Key": "certificate_authority or certificate_authority_file",
      "Type": "[base64 encoded] string or relative file location"
    }
  },
  "default-upstream-timeout": {
    "title": "Default Upstream Timeout",
    "id": "default-upstream-timeout",
    "filename": "default-upstream-timeout.md",
    "description": "Default Upstream Timeout is the default timeout applied to a proxied route when no timeout key is specified by the policy.",
    "keywords": [
      "reference",
      "Default Upstream Timeout"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "DEFAULT_UPSTREAM_TIMEOUT",
      "Config File Key": "default_upstream_timeout",
      "Example": "10m, 1h45m",
      "Default": "30s"
    }
  },
  "set-response-headers": {
    "title": "Set Response Headers",
    "id": "set-response-headers",
    "filename": "set-response-headers.md",
    "keywords": [
      "reference",
      "Set Response Headers"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Config File Key": "set_response_headers",
      "Type": "map of strings key value pairs"
    }
  },
  "set-response-headers-route": {
    "title": "Set Response Headers (Per Route)",
    "id": "routes/set-response-headers",
    "filename": "set-response-headers.md",
    "keywords": [
      "reference",
      "Set Response Headers"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Config File Key": "set_response_headers",
      "Type": "map of strings key value pairs"
    }
  },
  "jwt-claim-headers": {
    "title": "JWT Claim Headers",
    "id": "jwt-claim-headers",
    "filename": "jwt-claim-headers.md",
    "description": "The JWT Claim Headers setting allows you to pass specific user session data to upstream applications as HTTP request headers and additional JWT claims.",
    "keywords": [
      "reference",
      "JWT Claim Headers"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "JWT_CLAIMS_HEADERS",
      "Config File Key": "jwt_claims_headers",
      "Type": "slice of string",
      "Example": "email, groups, user, given_name"
    }
  },
  "override-certificate-name": {
    "title": "Override Certificate Name",
    "id": "override-certificate-name",
    "filename": "override-certificate-name.md",
    "description": "Secure service communication can fail if the external certificate does not match the internally routed service hostname/SNI.",
    "keywords": [
      "reference",
      "Override Certificate Name"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "OVERRIDE_CERTIFICATE_NAME",
      "Config File Key": "override_certificate_name",
      "Type": "string",
      "Example": "*.corp.example.com if wild card or authenticate.corp.example.com/authorize.corp.example.com"
    }
  },
  "programmatic-redirect-domain-whitelist": {
    "title": "Programmatic Redirect Domain Whitelist",
    "id": "programmatic-redirect-domain-whitelist",
    "filename": "programmatic-redirect-domain-whitelist.md",
    "keywords": [
      "reference",
      "Programmatic Redirect Domain Whitelist"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Config File Key": "programmatic_redirect_domain_whitelist",
      "Type": "array of string",
      "Default": "localhost"
    }
  },
  "x-forwarded-for-http-header": {
    "title": "X-Forwarded-For HTTP Header",
    "id": "x-forwarded-for-http-header",
    "filename": "x-forwarded-for-http-header.md",
    "description": "Do not append proxy IP address to [x-forwarded-for](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers.html?highlight=skip_xff_append#x-forwarded-for).",
    "keywords": [
      "reference",
      "X-Forwarded-For HTTP Header"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "SKIP_XFF_APPEND",
      "Config File Key": "skip_xff_append",
      "Type": "bool",
      "Default": "false"
    }
  },
  "the-number-of-trusted-hops": {
    "title": "The number of trusted hops",
    "id": "the-number-of-trusted-hops",
    "filename": "the-number-of-trusted-hops.md",
    "description": "The number of trusted reverse proxies in front of pomerium.",
    "keywords": [
      "reference",
      "The number of trusted hops"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "XFF_NUM_TRUSTED_HOPS",
      "Config File Key": "xff_num_trusted_hops",
      "Type": "uint32",
      "Default": "0"
    }
  },
  "codec-type": {
    "title": "Codec Type",
    "id": "codec-type",
    "filename": "codec-type.md",
    "keywords": [
      "reference",
      "Codec Type"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environment Variable": "CODEC_TYPE",
      "Config File Key": "codec_type",
      "Type": "string",
      "Default": "auto (http1 in all-in-one mode)"
    }
  },
  "data-broker-internal-service-url": {
    "title": "Data Broker Internal Service URL",
    "id": "data-broker-internal-service-url",
    "filename": "data-broker-internal-service-url.md",
    "keywords": [
      "reference",
      "Data Broker Internal Service URL"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "DATABROKER_INTERNAL_SERVICE_URL or DATABROKER_INTERNAL_SERVICE_URLS",
      "Config File Key": "databroker_internal_service_url or databroker_internal_service_urls",
      "Type": "URL"
    }
  },
  "data-broker-storage-type": {
    "title": "Data Broker Storage Type",
    "id": "data-broker-storage-type",
    "filename": "data-broker-storage-type.md",
    "keywords": [
      "reference",
      "Data Broker Storage Type"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "DATABROKER_STORAGE_TYPE",
      "Config File Key": "databroker_storage_type",
      "Type": "string",
      "Example": "redis,memory",
      "Default": "memory"
    }
  },
  "data-broker-storage-connection-string": {
    "title": "Data Broker Storage Connection String",
    "id": "data-broker-storage-connection-string",
    "filename": "data-broker-storage-connection-string.md",
    "keywords": [
      "reference",
      "Data Broker Storage Connection String"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "DATABROKER_STORAGE_CONNECTION_STRING",
      "Config File Key": "databroker_storage_connection_string",
      "Type": "string"
    }
  },
  "data-broker-storage-certificate-file": {
    "title": "Data Broker Storage Certificate File",
    "id": "data-broker-storage-certificate-file",
    "filename": "data-broker-storage-certificate-file.md",
    "keywords": [
      "reference",
      "Data Broker Storage Certificate File"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environment Variable": "DATABROKER_STORAGE_CERT_FILE",
      "Config File Key": "databroker_storage_cert_file",
      "Type": "relative file location"
    }
  },
  "data-broker-storage-certificate-key-file": {
    "title": "Data Broker Storage Certificate Key File",
    "id": "data-broker-storage-certificate-key-file",
    "filename": "data-broker-storage-certificate-key-file.md",
    "keywords": [
      "reference",
      "Data Broker Storage Certificate Key File"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environment Variable": "DATABROKER_STORAGE_KEY_FILE",
      "Config File Key": "databroker_storage_key_file",
      "Type": "relative file location"
    }
  },
  "data-broker-storage-certificate-authority": {
    "title": "Data Broker Storage Certificate Authority",
    "id": "data-broker-storage-certificate-authority",
    "filename": "data-broker-storage-certificate-authority.md",
    "keywords": [
      "reference",
      "Data Broker Storage Certificate Authority"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environment Variable": "DATABROKER_STORAGE_CA_FILE",
      "Config File Key": "databroker_storage_ca_file",
      "Type": "relative file location"
    }
  },
  "data-broker-storage-tls-skip-verify": {
    "title": "Data Broker Storage TLS Skip Verify",
    "id": "data-broker-storage-tls-skip-verify",
    "filename": "data-broker-storage-tls-skip-verify.md",
    "keywords": [
      "reference",
      "Data Broker Storage TLS Skip Verify"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Environment Variable": "DATABROKER_STORAGE_TLS_SKIP_VERIFY",
      "Config File Key": "databroker_storage_tls_skip_verify",
      "Type": "relative file location"
    }
  },
  "allowed-domains": {
    "title": "Allowed Domains",
    "id": "policy/allowed-domains",
    "filename": "allowed-domains.md",
    "keywords": [
      "reference",
      "Allowed Domains"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "`yaml`/`json` setting": "allowed_domains",
      "Type": "list of string",
      "Example": "pomerium.io , gmail.com"
    }
  },
  "allowed-groups": {
    "title": "Allowed Groups",
    "id": "policy/allowed-groups",
    "filename": "allowed-groups.md",
    "keywords": [
      "reference",
      "Allowed Groups"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "`yaml`/`json` setting": "allowed_groups",
      "Type": "list of string",
      "Example": "admins , support@company.com"
    }
  },
  "allowed-idp-claims": {
    "title": "Allowed IdP Claims",
    "id": "policy/allowed-idp-claims",
    "filename": "allowed-idp-claims.md",
    "description": "Authorize users by matching claims attached to a user's identity token by their identity provider",
    "keywords": [
      "reference",
      "Allowed IdP Claims"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "`yaml`/`json` setting": "allowed_idp_claims",
      "Type": "map of strings lists"
    }
  },
  "allowed-users": {
    "title": "Allowed Users",
    "id": "policy/allowed-users",
    "filename": "allowed-users.md",
    "keywords": [
      "reference",
      "Allowed Users"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "`yaml`/`json` setting": "allowed_users",
      "Type": "list of string",
      "Example": "alice@pomerium.io , bob@contractor.co"
    }
  },
  "allow-any-authenticated-user": {
    "title": "Allow Any Authenticated User",
    "id": "routes/allow-any-authenticated-user",
    "filename": "allow-any-authenticated-user.md",
    "keywords": [
      "reference",
      "Allow Any Authenticated User"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "allow_any_authenticated_user",
      "Type": "bool",
      "Default": "false"
    }
  },
  "cluster-name": {
    "title": "Cluster Name",
    "id": "routes/cluster-name",
    "filename": "cluster-name.md",
    "keywords": [
      "reference",
      "Cluster Name"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "name",
      "Type": "string"
    }
  },
  "cors-preflight": {
    "title": "CORS Preflight",
    "id": "routes/cors-preflight",
    "filename": "cors-preflight.md",
    "keywords": [
      "proxy"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "`yaml`/`json` setting": "cors_allow_preflight",
      "Type": "bool",
      "Default": "false"
    }
  },
  "enable-google-cloud-serverless-authentication": {
    "title": "Enable Google Cloud Serverless Authentication",
    "id": "routes/enable-google-cloud-serverless-authentication",
    "filename": "enable-google-cloud-serverless-authentication.md",
    "keywords": [
      "reference",
      "Enable Google Cloud Serverless Authentication"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "ENABLE_GOOGLE_CLOUD_SERVERLESS_AUTHENTICATION",
      "Config File Key": "enable_google_cloud_serverless_authentication",
      "Type": "bool",
      "Default": "false"
    }
  },
  "from": {
    "title": "From",
    "id": "routes/from",
    "filename": "from.md",
    "keywords": [
      "reference",
      "From"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "from",
      "Type": "URL (must contain a scheme and hostname, must not contain a path)",
      "Schemes": "https, tcp+https"
    }
  },
  "health-checks": {
    "title": "Health Checks",
    "id": "routes/health-checks",
    "filename": "health-checks.md",
    "keywords": [
      "reference",
      "Health Checks"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "health_checks",
      "Type": "array of objects"
    }
  },
  "host-rewrite": {
    "title": "Host Rewrite",
    "id": "routes/host-rewrite",
    "filename": "host-rewrite.md",
    "keywords": [
      "reference",
      "Host Rewrite"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` settings": "host_rewrite, host_rewrite_header, host_path_regex_rewrite_pattern, host_path_regex_rewrite_substitution",
      "Type": "string"
    }
  },
  "idle-timeout": {
    "title": "Idle Timeout",
    "id": "routes/idle-timeout",
    "filename": "idle-timeout.md",
    "keywords": [
      "reference",
      "Idle Timeout"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "idle_timeout",
      "Default": "5m"
    }
  },
  "identity-provider-client-id-per-route": {
    "title": "Identity Provider Client ID (per route)",
    "id": "routes/identity-provider-client-id-per-route",
    "filename": "identity-provider-client-id-per-route.md",
    "keywords": [
      "reference",
      "Identity Provider Client ID (per route)"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "idp_client_id",
      "Type": "string"
    }
  },
  "identity-provider-client-secret-per-route": {
    "title": "Identity Provider Client Secret (per route)",
    "id": "routes/identity-provider-client-secret-per-route",
    "filename": "identity-provider-client-secret-per-route.md",
    "keywords": [
      "reference",
      "Identity Provider Client Secret (per route)"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "idp_client_secret",
      "Type": "string"
    }
  },
  "kubernetes-service-account-token": {
    "title": "Kubernetes Service Account Token",
    "id": "routes/kubernetes-service-account-token",
    "filename": "kubernetes-service-account-token.md",
    "keywords": [
      "reference",
      "Kubernetes Service Account Token"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "kubernetes_service_account_token / kubernetes_service_account_token_file",
      "Type": "string or relative file location containing a Kubernetes bearer token",
      "Example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJ... or /var/run/secrets/kubernetes.io/serviceaccount/token"
    }
  },
  "load-balancing-policy": {
    "title": "Load Balancing Policy",
    "id": "routes/load-balancing-policy",
    "filename": "load-balancing-policy.md",
    "keywords": [
      "reference",
      "Load Balancing Policy"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "lb_policy",
      "Type": "enum"
    }
  },
  "load-balancing-policy-config": {
    "title": "Load Balancing Policy Config",
    "id": "routes/load-balancing-policy-config",
    "filename": "load-balancing-policy-config.md",
    "keywords": [
      "reference",
      "Load Balancing Policy Config"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "least_request_lb_config, ring_hash_lb_config, maglev_lb_config",
      "Type": "object"
    }
  },
  "outlier-detection": {
    "title": "Outlier Detection",
    "id": "routes/outlier-detection",
    "filename": "outlier-detection.md",
    "keywords": [
      "reference",
      "Outlier Detection"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "outlier_detection",
      "Type": "object"
    }
  },
  "pass-identity-headers": {
    "title": "Pass Identity Headers",
    "id": "routes/pass-identity-headers",
    "filename": "pass-identity-headers.md",
    "keywords": [
      "reference",
      "Pass Identity Headers"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "pass_identity_headers",
      "Type": "bool",
      "Default": "false"
    }
  },
  "path": {
    "title": "Path",
    "id": "routes/path",
    "filename": "path.md",
    "keywords": [
      "reference",
      "Path"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "path",
      "Type": "string",
      "Example": "/admin/some/exact/path"
    }
  },
  "prefix": {
    "title": "Prefix",
    "id": "routes/prefix",
    "filename": "prefix.md",
    "keywords": [
      "reference",
      "Prefix"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "prefix",
      "Type": "string",
      "Example": "/admin"
    }
  },
  "prefix-rewrite": {
    "title": "Prefix Rewrite",
    "id": "routes/prefix-rewrite",
    "filename": "prefix-rewrite.md",
    "keywords": [
      "reference",
      "Prefix Rewrite"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "prefix_rewrite",
      "Type": "string",
      "Example": "/subpath"
    }
  },
  "public-access": {
    "title": "Public Access",
    "id": "routes/public-access",
    "filename": "public-access.md",
    "keywords": [
      "reference",
      "Public Access"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "allow_public_unauthenticated_access",
      "Type": "bool",
      "Default": "false"
    }
  },
  "redirect": {
    "title": "Redirect",
    "id": "routes/redirect",
    "filename": "redirect.md",
    "keywords": [
      "reference",
      "Redirect"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "'redirect'",
      "Type": "object"
    }
  },
  "regex": {
    "title": "Regex",
    "id": "routes/regex",
    "filename": "regex.md",
    "keywords": [
      "reference",
      "Regex"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "regex",
      "Type": "string (containing a regular expression)",
      "Example": "^/(admin|superuser)/.*$"
    }
  },
  "regex-rewrite": {
    "title": "Regex Rewrite",
    "id": "routes/regex-rewrite",
    "filename": "regex-rewrite.md",
    "keywords": [
      "reference",
      "Regex Rewrite"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "regex_rewrite_pattern, regex_rewrite_substitution",
      "Type": "string"
    }
  },
  "remove-request-headers": {
    "title": "Remove Request Headers",
    "id": "routes/remove-request-headers",
    "filename": "remove-request-headers.md",
    "keywords": [
      "reference",
      "Remove Request Headers"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "remove_request_headers",
      "Type": "array of strings"
    }
  },
  "rewrite-response-headers": {
    "title": "Rewrite Response Headers",
    "id": "routes/rewrite-response-headers",
    "filename": "rewrite-response-headers.md",
    "keywords": [
      "reference",
      "Rewrite Response Headers"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "rewrite_response_headers",
      "Type": "object"
    }
  },
  "route-timeout": {
    "title": "Route Timeout",
    "id": "routes/route-timeout",
    "filename": "route-timeout.md",
    "keywords": [
      "reference",
      "Route Timeout"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "timeout",
      "Default": "30s"
    }
  },
  "set-authorization-header": {
    "title": "Set Authorization Header",
    "id": "routes/set-authorization-header",
    "filename": "set-authorization-header.md",
    "keywords": [
      "reference",
      "Set Authorization Header"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "set_authorization_header",
      "Type": "string (pass_through, access_token or id_token)",
      "Default": "pass_through"
    }
  },
  "set-request-headers": {
    "title": "Set Request Headers",
    "id": "routes/set-request-headers",
    "filename": "set-request-headers.md",
    "keywords": [
      "reference",
      "Set Request Headers"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "set_request_headers",
      "Type": "map of strings key value pairs"
    }
  },
  "signout-redirect-url": {
    "title": "Signout Redirect URL",
    "id": "routes/signout-redirect-url",
    "filename": "signout-redirect-url.md",
    "keywords": [
      "reference",
      "Signout Redirect URL"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Environmental Variable": "SIGNOUT_REDIRECT_URL",
      "Config File Key": "signout_redirect_url",
      "Type": "URL"
    }
  },
  "tls-client-certificate": {
    "title": "TLS Client Certificate",
    "id": "routes/tls-client-certificate",
    "filename": "tls-client-certificate.md",
    "keywords": [
      "reference",
      "TLS Client Certificate"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "tls_client_cert and tls_client_key or tls_client_cert_file and tls_client_key_file",
      "Type": "[base64 encoded] string or relative file location"
    }
  },
  "tls-custom-certificate-authority": {
    "title": "TLS Custom Certificate Authority",
    "id": "routes/tls-custom-certificate-authority",
    "filename": "tls-custom-certificate-authority.md",
    "keywords": [
      "reference",
      "TLS Custom Certificate Authority"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "tls_custom_ca or tls_custom_ca_file",
      "Type": "[base64 encoded] string or relative file location"
    }
  },
  "tls-downstream-client-certificate-authority": {
    "title": "TLS Downstream Client Certificate Authority",
    "id": "routes/tls-downstream-client-certificate-authority",
    "filename": "tls-downstream-client-certificate-authority.md",
    "keywords": [
      "reference",
      "TLS Downstream Client Certificate Authority"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "tls_downstream_client_ca or tls_downstream_client_ca_file",
      "Type": "[base64 encoded] string or relative file location"
    }
  },
  "tls-skip-verification": {
    "title": "TLS Skip Verification",
    "id": "routes/tls-skip-verification",
    "filename": "tls-skip-verification.md",
    "keywords": [
      "reference",
      "TLS Skip Verification"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "tls_skip_verify",
      "Type": "bool",
      "Default": "false"
    }
  },
  "tls-server-name": {
    "title": "TLS Server Name",
    "id": "routes/tls-server-name",
    "filename": "tls-server-name.md",
    "keywords": [
      "reference",
      "TLS Server Name"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "tls_server_name",
      "Type": "string"
    }
  },
  "tls-upstream-server-name": {
    "title": "TLS Upstream Server Name",
    "id": "tls-upstream-server-name",
    "filename": "tls-upstream-server-name.md",
    "keywords": [
      "reference",
      "TLS Upstream Server Name"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Config File Key": "tls_upstream_server_name",
      "Type": "string"
    }
  },
  "tls-downstream-server-name": {
    "title": "TLS Downstream Server Name",
    "id": "tls-downstream-server-name",
    "filename": "tls-downstream-server-name.md",
    "keywords": [
      "reference",
      "TLS Downstream Server Name"
    ],
    "services": [
      "todo",
      "todo2"
    ],
    "attributes": {
      "Config File Key": "tls_downstream_server_name",
      "Type": "string"
    }
  },
  "to": {
    "title": "To",
    "id": "routes/to",
    "filename": "to.md",
    "keywords": [
      "reference",
      "To"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "`yaml`/`json` setting": "to",
      "Type": "URL or list of URLs (must contain a scheme and hostname) with an optional weight",
      "Schemes": "http, https, tcp"
    }
  },
  "spdy": {
    "title": "SPDY",
    "id": "routes/spdy",
    "filename": "spdy.md",
    "keywords": [
      "reference",
      "SPDY"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "allow_spdy",
      "Type": "bool",
      "Default": "false"
    }
  },
  "websocket-connections": {
    "title": "Websocket Connections",
    "id": "routes/websocket-connections",
    "filename": "websocket-connections.md",
    "keywords": [
      "reference",
      "Websocket Connections"
    ],
    "services": [
      "proxy"
    ],
    "attributes": {
      "Config File Key": "allow_websockets",
      "Type": "bool",
      "Default": "false"
    }
  },
  "google-cloud-serverless-authentication-service-account": {
    "title": "Google Cloud Serverless Authentication Service Account",
    "id": "google-cloud-serverless-authentication-service-account",
    "filename": "google-cloud-serverless-authentication-service-account.md",
    "keywords": [
      "reference",
      "Google Cloud Serverless Authentication Service Account"
    ],
    "services": [
      "authorize"
    ],
    "attributes": {
      "Environmental Variable": "GOOGLE_CLOUD_SERVERLESS_AUTHENTICATION_SERVICE_ACCOUNT",
      "Config File Key": "google_cloud_serverless_authentication_service_account",
      "Type": "[base64 encoded] string"
    }
  },
  "signing-key": {
    "title": "Signing Key",
    "id": "signing-key",
    "filename": "signing-key.md",
    "description": "Signing Key is the key used to sign a user's attestation JWT which can be consumed by upstream applications to pass along identifying user information like username, id, and groups.",
    "keywords": [
      "reference",
      "Signing Key"
    ],
    "services": [
      "test",
      "todo2"
    ],
    "attributes": {
      "Environmental Variable": "SIGNING_KEY",
      "Config File Key": "signing_key",
      "Type": "[base64 encoded] string"
    }
  },
  "devices": {
    "title": "Devices",
    "id": "devices",
    "description": "Introduced in v0.16.0, the Manage Devices page lets administrators manage user devices for policy-based authorization.",
    "more": "/docs/enterprise/reference/manage#devices",
    "enterpriseOnly": true
  }
}